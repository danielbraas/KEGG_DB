library(tidyverse)
install.packages('tidyverse',dependencies = T)
library(tidyverse)
install.packages(c('scales','colorspace','lazyeval','jsonlite','readr','png','tidyverse','readxl',
'BiocGenerics', 'BiocInstaller', 'Biostrings', 'data.table', 'feather', 'IRanges', 'robustbase', 'S4Vectors',
'slam', 'sourcetools', 'survival', 'XVector', 'zlibbioc','devtools','xlsx','xml2','mixOmics','AppliedPredictiveModeling',
'pheatmap','gridExtra','corrplot','XML'),
dependencies = T)
source("https://bioconductor.org/biocLite.R")
biocLite(c("xcms",'Biostrings','KEGGREST','CAMERA','sva'))
library(devtools)
install_github('danielbraas/MetabFUN')
install.packages('stringi', dependencies = T)
library(tidyverse)
install.packages('stringi')
install.packages('stringi', dependencies = T)
install.packages('stringi', dependencies = T)
install.packages('C:/Users/Daniel/Downloads/stringi_1.2.4.tar.gz', repos = NULL, type="source")
R CMD INSTALL --no-lock <pkg>
install.packages("stringi", dependencies=TRUE, INSTALL_opts = c('--no-lock'))
library(stringi)
library(devtools)
install_github('danielbraas/MetabFUN')
install.packages(c("callr", "cli", "commonmark", "CORElearn", "covr", "data.table", "devtools", "digest", "dimRed", "doParallel", "dplyr", "egg", "evaluate", "fansi", "ggplot2", "htmlwidgets", "ipred", "later", "lattice", "lintr", "magic", "MASS", "Matrix", "mgcv", "mime", "ModelMetrics", "nanotime", "pkgbuild", "pkgconfig", "pkgload", "pls", "processx", "R.rsp", "R.utils", "R6", "Rcpp", "RcppCCTZ", "reprex", "reshape", "rlang", "robustbase", "roxygen2", "rstudioapi", "shiny", "snow", "survival", "testthat", "tidyr", "tidyselect", "tinytex", "TTR", "webshot", "xfun", "XML", "xtable", "xts", "zoo"))
install.packages('XLConnect')
library(XLConnect)
help(package='XLConnect')
system('powershell -command "netstat -an"')
system('powershell -command "netstat -ab"')
library(xml2)
test <- read_html('https://rdpguard.com/free-whois.aspx?ip=104.193.83.157#')
test
xml_contents()
xml_contents(test)
xml_text(test)
library(tidyverse)
library(XLConnect)
install.packages('tidyverse', dependencies = T)
library(tidyverse)
install.packages('mailR')
library(mailR)
sender <- "danielbraas@gmail.com"  # Replace with a valid address
recipients <- c("danielbraas@gmail.com")  # Replace with one or more valid addresses
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "aspmx.l.google.com", port = 25),
authenticate = FALSE,
send = FALSE)
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465),
authenticate = FALSE,
send = FALSE)
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 587),
authenticate = FALSE,
send = FALSE)
help(package='mailR')
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 587),
authenticate = T,
send = FALSE)
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 587, user.name='danielbraas@gmail.com', passwd='3rzW54vg'),
authenticate = T,
send = FALSE)
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name='danielbraas@gmail.com', passwd='3rzW54vg'),
authenticate = T,
send = FALSE)
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com", port = 465, user.name='danielbraas@gmail.com', passwd='3rzW54vg', ssl=T),
authenticate = T,
send = FALSE)
email <- send.mail(from = sender,
to = recipients,
subject="Subject of the email",
body = "Body of the email",
smtp = list(host.name = "smtp.gmail.com",
port = 465,
user.name='danielbraas@gmail.com',
passwd='3rzW54vg',
ssl=T),
authenticate = T,
send = T)
shiny::runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
help(package='shinyFiles')
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
?observe
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
runApp('C:/Users/Daniel/Dropbox/R_projects/ShinyDB/plotthat')
setwd("C:/Users/Daniel/Dropbox/R_projects/KEGG_DB")
library(tidyverse)
library(KEGGREST)
comps <- keggList('compound')
head(comps)
list.files()
load('KEGG_DB.rda')
head(KEGG_DB)
KEGG_DB[[1]]
list.files()
test <- list()
for (i in 1:length(KEGG_DB)){
test[[i]] <- as.list(KEGG_DB[[i]][[1]])
}
Metab_DB <- test
head(Metab_DB)
Metab_DB[[1]]
Metab_DB[1]
Metab_DB[[1]][2]
Metab_DB[[1]] %>% str()
str(Metab_DB)
KEGG_DB[[1]][[1]]
KEGG_DB[[1]] %>% str
KEGG_DB[[2]] %>% str
unlist(KEGG_DB)
unlist(KEGG_DB) %>% head()
unlist(KEGG_DB) %>% head(20)
unlist(KEGG_DB) %>% data.frame() %>% head()
KEGG_DB[[1]] %>% str()
KEGG_DB[[1]]$NAME
KEGG_DB[[1]]$NAME %>% collapse()
KEGG_DB[[1]]$NAME %>% c()
KEGG_DB[[1]]$NAME %>% c(collapse = T)
KEGG_DB[[2]]$NAME
KEGG_DB[[2]]$NAME %>% paste0()
KEGG_DB[[2]]$NAME %>% paste0(collapse = T)
KEGG_DB[[2]]$NAME %>% paste0(collapse = '')
i=1
KEGG_DB[[i]] <- keggGet(names(comps[i]))
KEGG_DB
KEGG_DB[[1]]
i=2
KEGG_DB[[2]]
load('KEGG_DB.rda')
KEGG_DB[[1]]
KEGG_DB[[1]] %>% as.data.frame()
grep('PubChem', KEGG_DB)
grep('PubChem', KEGG_DB) %>% head()
names(KEGG_DB)[1:3]
rm(test)
rm(Metab_DB)
names(KEGG_DB[[1]])
KEGG_DB[[1]]$EXACT_MASS
MetabDB <- data.frame('Name','KEGG.ID')
head(MetabDB)
x <- KEGG_DB[[1:2]]
x
x <- KEGG_DB[[1]]
x
x <- KEGG_DB[c(1:2)]
x[[1]]$NAME
paste(x[[1]]$NAME, collapse = =')')
paste(x[[1]]$NAME, collapse = ')' )
paste(x[[1]]$NAME, collapse = '' )
x[[1]]$ENTRY
x[[1]]$ENTRY %>% as.character()
names(x[[1]])
x[[1]]$FORMULA
x[[1]]$EXACT_MASS
rm(MetabDB)
decode_KEGG <- function(x){
Name <- paste(x$NAME, collapse = '')
KEGG.ID <- x$ENTRY %>%
as.character()
Formula <- x$FORMULA
Exact.Mass <- x$EXACT_MASS
MetabDB <- data.frame(Name, KEGG.ID, Formula, Exact.Mass)
}
decode_KEGG <- function(x){
Name <- paste(x$NAME, collapse = '')
KEGG.ID <- x$ENTRY %>%
as.character()
Formula <- x$FORMULA
Exact.Mass <- x$EXACT_MASS
MetabDB <- data.frame(Name, KEGG.ID, Formula, Exact.Mass)
return(MetabDB)
}
map(x, decode_KEGG)
map(x, decode_KEGG) %>% map_df()
map_df(x, decode_KEGG)
warnings()
names(x[[1]])
x[[2]]$REMARK
x[[1]]$REMARK
KEGG_DB[[5]]$REMARK
KEGG_DB[[5]]$REACTION
KEGG_DB[[5]]$REACTION %>% paste(., collapse = ' ')
KEGG_DB[[5]]$REACTION %>% paste(., collapse = ' ') %>% str_replace_all(., ' ',';')
map_df(x, decode_KEGG)
x[[2]]
x[[2]]$DBLINKS
x[[2]]$DBLINKS %>% paste(., collapse = '_')
test <- x[[2]]$DBLINKS %>% paste(., collapse = '_')
str_locate(test, 'PubChem:')
?str_locate
PubChem <- paste(x[[2]]$DBLINKS, collapse = '_')
PubChem
start <- str_locate(PubChem, 'PubChem(: )?')
start
str_sub(PubChem, start = 22)
PubChem <- str_remove_all(PubChem, ': ')
PubChem
start <- str_locate(PubChem, 'PubChem(: )?')
start
str_sub(PubChem, start = 18)
str_sub(PubChem, start = 12)
PubChem <- paste(x[[2]]$DBLINKS, collapse = '_')
str_locate(PubChem, 'PubChem(: )?')
str_locate(PubChem, 'PubChem(: )?')[2]
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
start
PubChem <- str_sub(PubChem, start = start)
PubChem
end <- str_locate(PubChem, '_')
end
str_sub(PubChem, end = end)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
decode_KEGG <- function(x){
Name <- paste(x$NAME, collapse = '')
KEGG.ID <- x$ENTRY %>%
as.character()
Formula <- x$FORMULA
Exact.Mass <- x$EXACT_MASS
PubChem <- paste(x$DBLINKS, collapse = '_')
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
PubChem <- str_sub(PubChem, start = start)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
MetabDB <- data.frame(Name, KEGG.ID, Formula, Exact.Mass, PubChem)
return(MetabDB)
}
for (i in 1:length(comps)) {
KEGG_DB[[i]] <- keggGet(names(comps[i]))
print(i)
}
saveRDS(KEGG_DB, file='KEGG_DB.rds')
load('KEGG_DB.rda')
KEGG_DB[[1]]
KEGG_DB[[1]]$ENTRY
comps[[1]]
comps[1]
comps[1] %>% names()
x
decode_KEGG <- function(x){
Name <- paste(x$NAME, collapse = '')
KEGG.ID <- x$ENTRY %>%
as.character()
Formula <- x$FORMULA
Exact.Mass <- x$EXACT_MASS
PubChem <- paste(x$DBLINKS, collapse = '_')
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
PubChem <- str_sub(PubChem, start = start)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
MetabDB <- data.frame(Name, KEGG.ID, Formula, Exact.Mass, PubChem)
return(MetabDB)
}
map_df(x, decode_KEGG)
test <- map_df(x, decode_KEGG)
test <- map_df(x, decode_KEGG) %>% suppressWarnings()
test <- suppressWarnings(map_df(x, decode_KEGG))
names(comps)[1:6]
names(comps)[1:6] %>% str_remove(., '^(.):')
names(comps)[1:6] %>% str_remove(., 'cpd:')
cpd <- names(comps)[1:6] %>% str_remove(., 'cpd:')
setdiff(cpd, test$KEGG.ID)
KEGGREST::keggGet('C00001')
comps <- KEGGREST::keggList('compound') %>%
names() %>%
str_remove(., 'cpd:')
head(comps)
exists(KEGG_DB)
?exists
map_chr(x, function(x) x$ENTRY)
cpd <- map_chr(KEGG_DB, function(x) x$ENTRY)
cpd[1:20]
comps <- setdiff(comps, cpd)
test <- KEGG_DB
length(test)
test[[18366]] <- KEGGREST::keggGet('C07138')
test[[18366]]
(length(KEGG_DB)+1):(length(KEGG_DB)+length(comps))
i=1
(length(KEGG_DB)+ i)
if (exists(KEGG_DB)){
cpd <- map_chr(KEGG_DB, function(x) x$ENTRY)
comps <- setdiff(comps, cpd)
for (i in 1:length(comps)) {
KEGG_DB[[(length(KEGG_DB)+ i)]] <- KEGGREST::keggGet(comps[i])
print(i)
}
} else {
for (i in 1:length(comps)) {
KEGG_DB[[i]] <- KEGGREST::keggGet(comps[i])
print(i)
}
}
exists('KEGG_DB')
comps <- setdiff(comps, cpd)
if (exists('KEGG_DB')){
cpd <- map_chr(KEGG_DB, function(x) x$ENTRY)
comps <- setdiff(comps, cpd)
for (i in 1:length(comps)) {
KEGG_DB[[(length(KEGG_DB)+ i)]] <- KEGGREST::keggGet(comps[i])
print(i)
}
} else {
for (i in 1:length(comps)) {
KEGG_DB[[i]] <- KEGGREST::keggGet(comps[i])
print(i)
}
}
KEGG_DB[[length(KEGG_DB)]]
decode_KEGG(KEGG_DB[[length(KEGG_DB)]])
saveRDS(KEGG_DB, file='KEGG_DB.rds')
n <- length(KEGG_DB)
decode_KEGG(KEGG_DB[[n]])
names(KEGG_DB[[n]])
KEGG_DB[[n]]
names(KEGG_DB[[1]][[n]])
KEGG_DB[[n]]
KEGG_DB[[n]] %>% names()
KEGG_DB[[1]] %>% names()
KEGGREST::keggGet(comps[i])
KEGGREST::keggGet(comps[i]) %>% class()
KEGGREST::keggGet(comps[i]) %>% .[[1]]
load('KEGG_DB.rda')
if (exists('KEGG_DB')){
cpd <- map_chr(KEGG_DB, function(x) x$ENTRY)
comps <- setdiff(comps, cpd)
for (i in 1:length(comps)) {
KEGG_DB[[(length(KEGG_DB)+ i)]] <- KEGGREST::keggGet(comps[i])[[1]]
print(i)
}
} else {
for (i in 1:length(comps)) {
KEGG_DB[[i]] <- KEGGREST::keggGet(comps[i])
print(i)
}
}
decode_KEGG(KEGG_DB[[n]])
saveRDS(KEGG_DB, file='KEGG_DB.rds')
MetabDB <- map_df(KEGG_DB, decode_KEGG)
x <- KEGG_DB[c(1:10)]
MetabDB <- map_df(x, decode_KEGG)
sapply(KEGG_DB, names())
sapply(KEGG_DB, names)
map(KEGG_DB, names())
map(KEGG_DB, names)
map_chr(KEGG_DB, names)
map_df(KEGG_DB, names)
map(KEGG_DB, names) %>% map_df()
map(KEGG_DB, names) %>% map_df(~.)
map(KEGG_DB, names) %>% map_df(.)
map(KEGG_DB, names) %>% map_int(length)
map(KEGG_DB, names) %>% map_int(length) %>% which.min()
KEGG_DB[[18367]]
KEGG_DB[[18366]]
KEGG_DB[[18367]]
KEGG_DB[[18368]]
KEGG_DB[[18367]]
comps[1:10]
KEGGREST::keggGet("C17278")
KEGG_DB[[18367]] <- KEGGREST::keggGet("C17278")
map(KEGG_DB, names) %>% map_int(length) %>% which.min()
KEGG_DB[[18367]]
map(KEGG_DB, names) %>% map_int(length) %>% which.min()
KEGG_DB[[18367]] <- KEGGREST::keggGet("C17278")[[1]]
KEGG_DB[[18367]]
map(KEGG_DB, names) %>% map_int(length) %>% which.min()
KEGG_DB[[18369]]
map(KEGG_DB, names) %>% map_int(length) %>% which(is.null(.))
map(KEGG_DB, names) %>% map_int(length) %>% which(is.null(.)==T)
map(KEGG_DB, names) %>% map_int(length) %>% which(is.null(.)=T)
map(KEGG_DB, names) %>% map_int(length) %>% which(is.null())
map(KEGG_DB, names) %>% map_int(length) %>% is.null()
map(KEGG_DB, names) %>% map_int(length) %>% is.null(.)
map(KEGG_DB, names) %>% map_int(length) %>% which.min()
load('KEGG_DB.rda')
i=1
n <- length(KEGG_DB)
if (exists('KEGG_DB')){
cpd <- map_chr(KEGG_DB, function(x) x$ENTRY)
comps <- setdiff(comps, cpd)
n <- length(KEGG_DB)
for (i in 1:length(comps)) {
KEGG_DB[[(n + i)]] <- KEGGREST::keggGet(comps[i])[[1]]
print(i)
}
} else {
for (i in 1:length(comps)) {
KEGG_DB[[i]] <- KEGGREST::keggGet(comps[i])
print(i)
}
}
map(KEGG_DB, names) %>% map_int(length) %>% which.min()
saveRDS(KEGG_DB, file='KEGG_DB.rds')
MetabDB <- map_df(KEGG_DB, decode_KEGG)
x <- KEGG_DB[c(1:10)]
MetabDB <- map_df(x, decode_KEGG)
map(KEGG_DB, names) %>% map_int(length)
map(KEGG_DB, names) %>% map_int(length) %>% class
map(KEGG_DB, names) %>% map_int(length) %>% .==0
map(KEGG_DB, names) %>% map_int(length) %>% is.null
map(KEGG_DB, names) %>% map_int(length) %>% which.min
KEGG_DB[[5]] %>% names()
KEGG_DB[[50]] %>% names()
decode_KEGG(KEGG_DB[[50]])
KEGG_DB[[50]]
x <- KEGG_DB[[50]]
decode_KEGG(x)
Name <- paste(x$NAME, collapse = '')
Name
KEGG.ID <- x$ENTRY %>%
as.character()
KEGG.ID
Formula <- x$FORMULA
Formula
Exact.Mass <- x$EXACT_MASS
PubChem <- paste(x$DBLINKS, collapse = '_')
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
PubChem <- str_sub(PubChem, start = start)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
MetabDB <- data.frame(Name, KEGG.ID, Formula, Exact.Mass, PubChem)
is.null(Formula)
is.null(Name)
if (is.null(Formula)) Formula <- ''
Formula
if (is.null(Formula)) Formula <- NA
is.null(PubChem) <- T
PubChem <- is.null(PubChem)
PubChem
PubChem <- ''
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
start
PubChem <- str_sub(PubChem, start = start)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
PubChem
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
PubChem <- str_sub(PubChem, start = start)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
PubChem
decode_KEGG <- function(x){
Name <- paste(x$NAME, collapse = '')
if (is.null(Name)) Name <- NA
KEGG.ID <- x$ENTRY %>%
as.character()
if (is.null(KEGG.ID)) KEGG.ID <- NA
Formula <- x$FORMULA
if (is.null(Formula)) Formula <- NA
Exact.Mass <- x$EXACT_MASS
if (is.null(Exact.Mass)) Exact.Mass <- NA
PubChem <- paste(x$DBLINKS, collapse = '_')
if (is.null(PubChem)) PubChem <- NA
start <- str_locate(PubChem, 'PubChem(: )?')[2] + 1
PubChem <- str_sub(PubChem, start = start)
end <- str_locate(PubChem, '_')[1] - 1
PubChem <- str_sub(PubChem, end = end)
MetabDB <- data.frame(Name, KEGG.ID, Formula, Exact.Mass, PubChem)
return(MetabDB)
}
decode_KEGG(x)
MetabDB <- map_df(KEGG_DB, decode_KEGG)
head(MetabDB)
tail(MetabDB)
saveRDS(MetabDB, 'MetabDB.rds')
rm(list=ls())
